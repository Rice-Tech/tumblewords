/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/OfficeSceneWithPeople.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Office_WithPeople_1: THREE.Mesh
    Office_WithPeople_2: THREE.Mesh
    Office_WithPeople_3: THREE.Mesh
    Office_WithPeople_4: THREE.Mesh
    Office_WithPeople_5: THREE.Mesh
    Office_WithPeople_6: THREE.Mesh
    Office_WithPeople_7: THREE.Mesh
  }
  materials: {
    OfficeMat: THREE.MeshBasicMaterial
    AngryMan: THREE.MeshBasicMaterial
    ['AngryMan.001']: THREE.MeshBasicMaterial
    ['AngryMan.002']: THREE.MeshBasicMaterial
    ['AngryMan.003']: THREE.MeshBasicMaterial
    ['AngryMan.004']: THREE.MeshBasicMaterial
    ['AngryMan.005']: THREE.MeshBasicMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function OfficeSceneWithPeople(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/OfficeSceneWithPeople.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Office_WithPeople_1.geometry} material={materials.OfficeMat} />
      <mesh geometry={nodes.Office_WithPeople_2.geometry} material={materials.AngryMan} />
      <mesh geometry={nodes.Office_WithPeople_3.geometry} material={materials['AngryMan.001']} />
      <mesh geometry={nodes.Office_WithPeople_4.geometry} material={materials['AngryMan.002']} />
      <mesh geometry={nodes.Office_WithPeople_5.geometry} material={materials['AngryMan.003']} />
      <mesh geometry={nodes.Office_WithPeople_6.geometry} material={materials['AngryMan.004']} />
      <mesh geometry={nodes.Office_WithPeople_7.geometry} material={materials['AngryMan.005']} />
    </group>
  )
}

useGLTF.preload('/OfficeSceneWithPeople.glb')
