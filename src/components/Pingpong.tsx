/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/pingpong.glb -t 
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    arm: THREE.SkinnedMesh
    mesh: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_3: THREE.Mesh
    mesh_4: THREE.Mesh
    Bone: THREE.Bone
    Bone003: THREE.Bone
    Bone006: THREE.Bone
    Bone010: THREE.Bone
  }
  materials: {
    glove: THREE.MeshStandardMaterial
    wood: THREE.MeshStandardMaterial
    side: THREE.MeshStandardMaterial
    foam: THREE.MeshStandardMaterial
    lower: THREE.MeshStandardMaterial
    upper: THREE.MeshStandardMaterial
  }
}

export function PingPong(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/pingpong.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[1.877, -0.345, 2.323]} scale={2.968}>
        <primitive object={nodes.Bone} />
        <primitive object={nodes.Bone003} />
        <primitive object={nodes.Bone006} />
        <primitive object={nodes.Bone010} />
        <skinnedMesh geometry={nodes.arm.geometry} material={materials.glove} skeleton={nodes.arm.skeleton} />
      </group>
      <group position={[0.405, 0, -0.373]} rotation={[0, -0.038, 0]} scale={141.943}>
        <mesh geometry={nodes.mesh.geometry} material={materials.wood} />
        <mesh geometry={nodes.mesh_1.geometry} material={materials.side} />
        <mesh geometry={nodes.mesh_2.geometry} material={materials.foam} />
        <mesh geometry={nodes.mesh_3.geometry} material={materials.lower} />
        <mesh geometry={nodes.mesh_4.geometry} material={materials.upper} />
      </group>
    </group>
  )
}

useGLTF.preload('/pingpong.glb')
